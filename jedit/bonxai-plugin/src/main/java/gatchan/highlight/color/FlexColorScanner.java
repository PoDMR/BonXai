/* The following code was generated by JFlex 1.4.3 on 04/11/10 13:35 */

/*
 * :tabSize=8:indentSize=8:noTabs=false:
 * :folding=explicit:collapseFolds=1:
 *
 * Copyright Â© 2010 Matthieu Casanova
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package gatchan.highlight.color;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 04/11/10 13:35 from the specification file
 * <tt>Colors.flex</tt>
 */
class FlexColorScanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\0\26\0\1\0\2\0\1\13\11\0\1\0\2\0\1\16"+
    "\5\14\1\14\2\14\1\14\7\0\1\10\1\22\1\11\1\15\1\5"+
    "\1\23\1\21\1\2\1\3\1\36\1\32\1\24\1\30\1\26\1\33"+
    "\1\7\1\27\1\20\1\6\1\4\1\25\1\34\1\1\1\17\1\35"+
    "\1\31\1\0\1\0\1\0\3\0\1\10\1\22\1\11\1\15\1\5"+
    "\1\23\1\21\1\2\1\3\1\36\1\32\1\24\1\30\1\26\1\33"+
    "\1\7\1\27\1\20\1\6\1\4\1\25\1\34\1\1\1\17\1\35"+
    "\1\31\1\0\1\0\1\0\54\0\1\12\12\0\1\12\4\0\1\12"+
    "\5\0\27\12\1\0\37\12\1\0\u013f\12\31\0\162\12\4\0\14\12"+
    "\16\0\5\12\11\0\1\12\213\0\1\12\13\0\1\12\1\0\3\12"+
    "\1\0\1\12\1\0\24\12\1\0\54\12\1\0\46\12\1\0\5\12"+
    "\4\0\202\12\10\0\105\12\1\0\46\12\2\0\2\12\6\0\20\12"+
    "\41\0\46\12\2\0\1\12\7\0\47\12\110\0\33\12\5\0\3\12"+
    "\56\0\32\12\5\0\13\12\43\0\2\12\1\0\143\12\1\0\1\12"+
    "\17\0\2\12\7\0\2\12\12\0\3\12\2\0\1\12\20\0\1\12"+
    "\1\0\36\12\35\0\3\12\60\0\46\12\13\0\1\12\u0152\0\66\12"+
    "\3\0\1\12\22\0\1\12\7\0\12\12\43\0\10\12\2\0\2\12"+
    "\2\0\26\12\1\0\7\12\1\0\1\12\3\0\4\12\3\0\1\12"+
    "\36\0\2\12\1\0\3\12\16\0\2\12\23\0\6\12\4\0\2\12"+
    "\2\0\26\12\1\0\7\12\1\0\2\12\1\0\2\12\1\0\2\12"+
    "\37\0\4\12\1\0\1\12\23\0\3\12\20\0\11\12\1\0\3\12"+
    "\1\0\26\12\1\0\7\12\1\0\2\12\1\0\5\12\3\0\1\12"+
    "\22\0\1\12\17\0\2\12\43\0\10\12\2\0\2\12\2\0\26\12"+
    "\1\0\7\12\1\0\2\12\1\0\5\12\3\0\1\12\36\0\2\12"+
    "\1\0\3\12\17\0\1\12\21\0\1\12\1\0\6\12\3\0\3\12"+
    "\1\0\4\12\3\0\2\12\1\0\1\12\1\0\2\12\3\0\2\12"+
    "\3\0\3\12\3\0\10\12\1\0\3\12\113\0\10\12\1\0\3\12"+
    "\1\0\27\12\1\0\12\12\1\0\5\12\46\0\2\12\43\0\10\12"+
    "\1\0\3\12\1\0\27\12\1\0\12\12\1\0\5\12\3\0\1\12"+
    "\40\0\1\12\1\0\2\12\43\0\10\12\1\0\3\12\1\0\27\12"+
    "\1\0\20\12\46\0\2\12\43\0\22\12\3\0\30\12\1\0\11\12"+
    "\1\0\1\12\2\0\7\12\72\0\60\12\1\0\2\12\14\0\7\12"+
    "\72\0\2\12\1\0\1\12\2\0\2\12\1\0\1\12\2\0\1\12"+
    "\6\0\4\12\1\0\7\12\1\0\3\12\1\0\1\12\1\0\1\12"+
    "\2\0\2\12\1\0\4\12\1\0\2\12\11\0\1\12\2\0\5\12"+
    "\1\0\1\12\25\0\2\12\42\0\1\12\77\0\10\12\1\0\42\12"+
    "\35\0\4\12\164\0\42\12\1\0\5\12\1\0\2\12\45\0\6\12"+
    "\112\0\46\12\12\0\51\12\7\0\132\12\5\0\104\12\5\0\122\12"+
    "\6\0\7\12\1\0\77\12\1\0\1\12\1\0\4\12\2\0\7\12"+
    "\1\0\1\12\1\0\4\12\2\0\47\12\1\0\1\12\1\0\4\12"+
    "\2\0\37\12\1\0\1\12\1\0\4\12\2\0\7\12\1\0\1\12"+
    "\1\0\4\12\2\0\7\12\1\0\7\12\1\0\27\12\1\0\37\12"+
    "\1\0\1\12\1\0\4\12\2\0\7\12\1\0\47\12\1\0\23\12"+
    "\105\0\125\12\14\0\u026c\12\2\0\10\12\12\0\32\12\5\0\113\12"+
    "\25\0\15\12\1\0\4\12\16\0\22\12\16\0\22\12\16\0\15\12"+
    "\1\0\3\12\17\0\64\12\43\0\1\12\4\0\1\12\103\0\130\12"+
    "\10\0\51\12\127\0\35\12\63\0\36\12\2\0\5\12\u038b\0\154\12"+
    "\224\0\234\12\4\0\132\12\6\0\26\12\2\0\6\12\2\0\46\12"+
    "\2\0\6\12\2\0\10\12\1\0\1\12\1\0\1\12\1\0\1\12"+
    "\1\0\37\12\2\0\65\12\1\0\7\12\1\0\1\12\3\0\3\12"+
    "\1\0\7\12\3\0\4\12\2\0\6\12\4\0\15\12\5\0\3\12"+
    "\1\0\7\12\164\0\1\12\15\0\1\12\202\0\1\12\4\0\1\12"+
    "\2\0\12\12\1\0\1\12\3\0\5\12\6\0\1\12\1\0\1\12"+
    "\1\0\1\12\1\0\4\12\1\0\3\12\1\0\7\12\3\0\3\12"+
    "\5\0\5\12\u0ebb\0\2\12\52\0\5\12\5\0\2\12\4\0\126\12"+
    "\6\0\3\12\1\0\132\12\1\0\4\12\5\0\50\12\4\0\136\12"+
    "\21\0\30\12\70\0\20\12\u0200\0\u19b6\12\112\0\u51a6\12\132\0\u048d\12"+
    "\u0773\0\u2ba4\12\u215c\0\u012e\12\2\0\73\12\225\0\7\12\14\0\5\12"+
    "\5\0\1\12\1\0\12\12\1\0\15\12\1\0\5\12\1\0\1\12"+
    "\1\0\2\12\1\0\2\12\1\0\154\12\41\0\u016b\12\22\0\100\12"+
    "\2\0\66\12\50\0\14\12\164\0\5\12\1\0\207\12\44\0\32\12"+
    "\6\0\32\12\13\0\131\12\3\0\6\12\2\0\6\12\2\0\6\12"+
    "\2\0\3\12\43\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\70\1\1\0\4\1\1\0\44\1\1\2\37\1"+
    "\1\0\4\1\1\0\1\3\55\1\1\4\14\1\1\5"+
    "\1\1\1\6\1\1\1\7\2\1\1\10\4\1\1\11"+
    "\7\1\1\11\1\0\4\1\1\0\5\1\1\12\1\13"+
    "\5\1\1\14\7\1\1\15\4\1\1\16\16\1\1\17"+
    "\1\20\4\1\1\21\30\1\1\22\4\1\1\23\2\1"+
    "\1\0\16\1\1\0\4\1\1\24\2\1\1\25\1\26"+
    "\1\27\10\1\1\30\14\1\1\31\2\1\1\32\7\1"+
    "\1\33\2\1\1\34\1\35\1\36\5\1\1\37\12\1"+
    "\1\40\12\1\1\0\22\1\1\0\6\1\1\41\26\1"+
    "\1\42\1\1\1\43\1\44\2\1\1\45\1\46\1\1"+
    "\1\47\2\1\1\50\11\1\1\51\15\1\1\52\2\1"+
    "\1\53\1\54\7\1\1\55\13\1\1\0\13\1\1\56"+
    "\37\1\1\57\2\1\1\60\3\1\1\61\1\62\22\1"+
    "\1\63\2\1\1\64\4\1\1\65\1\1\1\66\1\1"+
    "\1\67\7\1\1\70\34\1\1\71\15\1\1\72\4\1"+
    "\1\73\1\74\1\75\3\1\1\76\1\77\1\100\2\1"+
    "\1\101\3\1\1\102\3\1\1\103\1\104\6\1\1\105"+
    "\2\1\1\106\5\1\1\107\1\110\1\1\1\111\1\1"+
    "\1\112\2\1\1\113\1\114\7\1\1\115\1\1\1\116"+
    "\1\1\1\117\1\1\1\120\1\1\1\121\1\1\1\122"+
    "\2\1\1\123\1\1\1\124\11\1\1\125\1\126\1\1"+
    "\1\127\2\1\1\130\1\131\3\1\1\132\1\1\1\133"+
    "\1\134\4\1\1\135\4\1\1\136\1\137\1\1\1\140"+
    "\1\141\1\142\2\1\1\143\7\1\1\144\1\145\14\1"+
    "\1\146\3\1\1\147\1\150\5\1\1\151\5\1\1\152"+
    "\1\1\1\153\1\1\1\154\1\155\2\1\1\156\3\1"+
    "\1\157\2\1\1\160\11\1\1\161\3\1\1\162\2\1"+
    "\1\163\10\1\1\164\1\1\1\165\1\1\1\166\4\1"+
    "\1\167\1\1\1\170\1\1\1\171\1\172\1\173\1\1"+
    "\1\174\1\175\1\176\1\177\3\1\1\200\2\1\1\201"+
    "\6\1\1\202\1\203\1\204\1\205\1\206\2\1\1\207"+
    "\5\1\1\210\1\1\1\211\1\1\1\212\2\1\1\213"+
    "\1\1\1\214\2\1\1\215";

  private static int [] zzUnpackAction() {
    int [] result = new int[891];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\37\0\76\0\135\0\174\0\233\0\272\0\331"+
    "\0\370\0\u0117\0\u0136\0\u0155\0\u0174\0\u0193\0\u01b2\0\u01d1"+
    "\0\u01f0\0\u020f\0\u022e\0\u024d\0\u026c\0\u028b\0\u02aa\0\u02c9"+
    "\0\u02e8\0\u0307\0\u0326\0\u0345\0\u0364\0\u0383\0\u03a2\0\u03c1"+
    "\0\u03e0\0\u03ff\0\u041e\0\u043d\0\u045c\0\u047b\0\u049a\0\u04b9"+
    "\0\u04d8\0\u04f7\0\u0516\0\u0535\0\u0554\0\u0573\0\u0592\0\u05b1"+
    "\0\u05d0\0\u05ef\0\u060e\0\u062d\0\u064c\0\u066b\0\u068a\0\u06a9"+
    "\0\u06c8\0\u06e7\0\u0706\0\u0725\0\u0744\0\u0763\0\u0782\0\u07a1"+
    "\0\u07c0\0\u07df\0\u07fe\0\u081d\0\u083c\0\u085b\0\u087a\0\u0899"+
    "\0\u08b8\0\u08d7\0\u08f6\0\u0915\0\u0934\0\u0953\0\u0972\0\u0991"+
    "\0\u09b0\0\u09cf\0\u09ee\0\u0a0d\0\u0a2c\0\u0a4b\0\u0a6a\0\u0a89"+
    "\0\u0aa8\0\u0ac7\0\u0ae6\0\u0b05\0\u0b24\0\u0b43\0\u0b62\0\u0b81"+
    "\0\u0ba0\0\u0bbf\0\u0bde\0\272\0\u0bfd\0\u0c1c\0\u0c3b\0\u0c5a"+
    "\0\u0c79\0\u0c98\0\u0cb7\0\u0cd6\0\u0cf5\0\u0d14\0\u0d33\0\u0d52"+
    "\0\u0d71\0\u0d90\0\u0daf\0\u0dce\0\u0ded\0\u0e0c\0\u0e2b\0\u0e4a"+
    "\0\u0e69\0\u0e88\0\u0ea7\0\u0ec6\0\u0ee5\0\u0f04\0\u0f23\0\u0f42"+
    "\0\u0f61\0\u0f80\0\u0f9f\0\u0fbe\0\u0fdd\0\u0ffc\0\u101b\0\u103a"+
    "\0\u1059\0\272\0\u1078\0\u1097\0\u10b6\0\u10d5\0\u10f4\0\u1113"+
    "\0\u1132\0\u1151\0\u1170\0\u118f\0\u11ae\0\u11cd\0\u11ec\0\u120b"+
    "\0\u122a\0\u1249\0\u1268\0\u1287\0\u12a6\0\u12c5\0\u12e4\0\u1303"+
    "\0\u1322\0\u1341\0\u1360\0\u137f\0\u139e\0\u13bd\0\u13dc\0\u13fb"+
    "\0\u141a\0\u1439\0\u1458\0\u1477\0\u1496\0\u14b5\0\u14d4\0\u14f3"+
    "\0\u1512\0\u1531\0\u1550\0\u156f\0\u158e\0\u15ad\0\u15cc\0\272"+
    "\0\u15eb\0\u160a\0\u1629\0\u1648\0\u1667\0\u1686\0\u16a5\0\u16c4"+
    "\0\u16e3\0\u1702\0\u1721\0\u1740\0\272\0\u175f\0\272\0\u177e"+
    "\0\272\0\u179d\0\u17bc\0\272\0\u17db\0\u17fa\0\u1819\0\u1838"+
    "\0\u1857\0\u1876\0\u1895\0\u18b4\0\u18d3\0\u18f2\0\u1911\0\u1930"+
    "\0\272\0\u194f\0\u196e\0\u198d\0\u19ac\0\u19cb\0\u19ea\0\u1a09"+
    "\0\u1a28\0\u1a47\0\u1a66\0\u1a85\0\272\0\u1aa4\0\u1ac3\0\u1ae2"+
    "\0\u1b01\0\u1b20\0\u1b3f\0\u1b5e\0\u1b7d\0\u1b9c\0\u1bbb\0\u1bda"+
    "\0\u1bf9\0\u1c18\0\u1c37\0\u1c56\0\u1c75\0\u1c94\0\u1cb3\0\u1cd2"+
    "\0\272\0\u1cf1\0\u1d10\0\u1d2f\0\u1d4e\0\u1d6d\0\u1d8c\0\u1dab"+
    "\0\u1dca\0\u1de9\0\u1e08\0\u1e27\0\u1e46\0\u1e65\0\u1e84\0\u1ea3"+
    "\0\272\0\u1ec2\0\u1ee1\0\u1f00\0\u1f1f\0\272\0\u1f3e\0\u1f5d"+
    "\0\u1f7c\0\u1f9b\0\u1fba\0\u1fd9\0\u1ff8\0\u2017\0\u2036\0\u2055"+
    "\0\u2074\0\u2093\0\u20b2\0\u20d1\0\u20f0\0\u210f\0\u212e\0\u214d"+
    "\0\u216c\0\u218b\0\u21aa\0\u21c9\0\u21e8\0\u2207\0\272\0\u2226"+
    "\0\u2245\0\u2264\0\u2283\0\272\0\u22a2\0\u22c1\0\u22e0\0\u22ff"+
    "\0\u231e\0\u233d\0\u235c\0\u237b\0\u239a\0\u23b9\0\u23d8\0\u23f7"+
    "\0\u2416\0\u2435\0\u2454\0\u2473\0\u2492\0\u24b1\0\u24d0\0\u24ef"+
    "\0\u250e\0\u252d\0\u254c\0\u256b\0\u258a\0\272\0\272\0\272"+
    "\0\u25a9\0\u25c8\0\u25e7\0\u2606\0\u2625\0\u2644\0\u2663\0\u2682"+
    "\0\272\0\u26a1\0\u26c0\0\u26df\0\u26fe\0\u271d\0\u273c\0\u275b"+
    "\0\u277a\0\u2799\0\u27b8\0\u27d7\0\u27f6\0\272\0\u2815\0\u2834"+
    "\0\u2853\0\u2872\0\u2891\0\u28b0\0\u28cf\0\u28ee\0\u290d\0\u292c"+
    "\0\272\0\u294b\0\u296a\0\272\0\272\0\272\0\u2989\0\u29a8"+
    "\0\u29c7\0\u29e6\0\u2a05\0\272\0\u2a24\0\u2a43\0\u2a62\0\u2a81"+
    "\0\u2aa0\0\u2abf\0\u2ade\0\u2afd\0\u2b1c\0\u2b3b\0\272\0\u2b5a"+
    "\0\u2b79\0\u2b98\0\u2bb7\0\u2bd6\0\u2bf5\0\u2c14\0\u2c33\0\u2c52"+
    "\0\u2c71\0\u2c90\0\u2caf\0\u2cce\0\u2ced\0\u2d0c\0\u2d2b\0\u2d4a"+
    "\0\u2d69\0\u2d88\0\u2da7\0\u2dc6\0\u2de5\0\u2e04\0\u2e23\0\u2e42"+
    "\0\u2e61\0\u2e80\0\u2e9f\0\u2ebe\0\u2edd\0\u2efc\0\u2f1b\0\u2f3a"+
    "\0\u2f59\0\u2f78\0\u2f97\0\272\0\u2fb6\0\u2fd5\0\u2ff4\0\u3013"+
    "\0\u3032\0\u3051\0\u3070\0\u308f\0\u30ae\0\u30cd\0\u30ec\0\u310b"+
    "\0\u312a\0\u3149\0\u3168\0\u3187\0\u31a6\0\u31c5\0\u31e4\0\u3203"+
    "\0\u3222\0\u3241\0\272\0\u3260\0\u327f\0\272\0\u329e\0\u32bd"+
    "\0\272\0\u32dc\0\u32fb\0\272\0\u331a\0\u3339\0\272\0\u3358"+
    "\0\u3377\0\u3396\0\u33b5\0\u33d4\0\u33f3\0\u3412\0\u3431\0\u3450"+
    "\0\272\0\u346f\0\u348e\0\u34ad\0\u34cc\0\u34eb\0\u350a\0\u3529"+
    "\0\u3548\0\u3567\0\u3586\0\u35a5\0\u35c4\0\u35e3\0\272\0\u3602"+
    "\0\u3621\0\37\0\272\0\u3640\0\u365f\0\u367e\0\u369d\0\u36bc"+
    "\0\u36db\0\u36fa\0\272\0\u3719\0\u3738\0\u3757\0\u3776\0\u3795"+
    "\0\u37b4\0\u37d3\0\u37f2\0\u3811\0\u3830\0\u384f\0\u386e\0\u388d"+
    "\0\u38ac\0\u38cb\0\u38ea\0\u3909\0\u3928\0\u3947\0\u3966\0\u3985"+
    "\0\u39a4\0\u39c3\0\272\0\u39e2\0\u3a01\0\u3a20\0\u3a3f\0\u3a5e"+
    "\0\u3a7d\0\u3a9c\0\u3abb\0\u3ada\0\u3af9\0\u3b18\0\u3b37\0\u3b56"+
    "\0\u3b75\0\u3b94\0\u3bb3\0\u3bd2\0\u3bf1\0\u3c10\0\u3c2f\0\u3c4e"+
    "\0\u3c6d\0\u3c8c\0\u3cab\0\u3cca\0\u3ce9\0\u3d08\0\u3d27\0\u3d46"+
    "\0\u3d65\0\u3d84\0\272\0\u3da3\0\u3dc2\0\272\0\u3de1\0\u3e00"+
    "\0\u3e1f\0\272\0\272\0\u3e3e\0\u3e5d\0\u3e7c\0\u3e9b\0\u3eba"+
    "\0\u3ed9\0\u3ef8\0\u3f17\0\u3f36\0\u3f55\0\u3f74\0\u3f93\0\u3fb2"+
    "\0\u3fd1\0\u3ff0\0\u400f\0\u402e\0\u404d\0\272\0\u406c\0\u408b"+
    "\0\272\0\u40aa\0\u40c9\0\u40e8\0\u4107\0\272\0\u4126\0\272"+
    "\0\u4145\0\272\0\u4164\0\u4183\0\u41a2\0\u41c1\0\u41e0\0\u41ff"+
    "\0\u421e\0\37\0\u423d\0\u425c\0\u427b\0\u429a\0\u42b9\0\u42d8"+
    "\0\u42f7\0\u4316\0\u4335\0\u4354\0\u4373\0\u4392\0\u43b1\0\u43d0"+
    "\0\u43ef\0\u440e\0\u442d\0\u444c\0\u446b\0\u448a\0\u44a9\0\u44c8"+
    "\0\u44e7\0\u4506\0\u4525\0\u4544\0\u4563\0\u4582\0\u45a1\0\u45c0"+
    "\0\u45df\0\u45fe\0\u461d\0\u463c\0\u465b\0\u467a\0\u4699\0\u46b8"+
    "\0\u46d7\0\u46f6\0\u4715\0\u4734\0\272\0\u4753\0\u4772\0\u4791"+
    "\0\u47b0\0\272\0\272\0\272\0\u47cf\0\u47ee\0\u480d\0\272"+
    "\0\272\0\272\0\u482c\0\u484b\0\272\0\u486a\0\u4889\0\u48a8"+
    "\0\272\0\u48c7\0\u48e6\0\u4905\0\272\0\272\0\u4924\0\u4943"+
    "\0\u4962\0\u4981\0\u49a0\0\u49bf\0\272\0\u49de\0\u49fd\0\272"+
    "\0\u4a1c\0\u4a3b\0\u4a5a\0\u4a79\0\u4a98\0\272\0\272\0\u4ab7"+
    "\0\272\0\u4ad6\0\272\0\u4af5\0\u4b14\0\272\0\272\0\u4b33"+
    "\0\u4b52\0\u4b71\0\u4b90\0\u4baf\0\u4bce\0\u4bed\0\272\0\u4c0c"+
    "\0\272\0\u4c2b\0\272\0\u4c4a\0\272\0\u4c69\0\272\0\u4c88"+
    "\0\272\0\u4ca7\0\u4cc6\0\272\0\u4ce5\0\272\0\u4d04\0\u4d23"+
    "\0\u4d42\0\u4d61\0\u4d80\0\u4d9f\0\u4dbe\0\u4ddd\0\u4dfc\0\272"+
    "\0\272\0\u4e1b\0\272\0\u4e3a\0\u4e59\0\272\0\272\0\u4e78"+
    "\0\u4e97\0\u4eb6\0\272\0\u4ed5\0\272\0\272\0\u4ef4\0\u4f13"+
    "\0\u4f32\0\u4f51\0\272\0\u4f70\0\u4f8f\0\u4fae\0\u4fcd\0\272"+
    "\0\272\0\u4fec\0\272\0\272\0\272\0\u500b\0\u502a\0\272"+
    "\0\u5049\0\u5068\0\u5087\0\u50a6\0\u50c5\0\u50e4\0\u5103\0\272"+
    "\0\272\0\u5122\0\u5141\0\u5160\0\u517f\0\u519e\0\u51bd\0\u51dc"+
    "\0\u51fb\0\u521a\0\u5239\0\u5258\0\u5277\0\272\0\u5296\0\u52b5"+
    "\0\u52d4\0\272\0\272\0\u52f3\0\u5312\0\u5331\0\u5350\0\u536f"+
    "\0\272\0\u538e\0\u53ad\0\u53cc\0\u53eb\0\u540a\0\272\0\u5429"+
    "\0\272\0\u5448\0\272\0\272\0\u5467\0\u5486\0\272\0\u54a5"+
    "\0\u54c4\0\u54e3\0\272\0\u5502\0\u5521\0\272\0\u5540\0\u555f"+
    "\0\u557e\0\u559d\0\u55bc\0\u55db\0\u55fa\0\u5619\0\u5638\0\272"+
    "\0\u5657\0\u5676\0\u5695\0\272\0\u56b4\0\u56d3\0\272\0\u56f2"+
    "\0\u5711\0\u5730\0\u574f\0\u576e\0\u578d\0\u57ac\0\u57cb\0\272"+
    "\0\u57ea\0\272\0\u5809\0\272\0\u5828\0\u5847\0\u5866\0\u5885"+
    "\0\272\0\u58a4\0\272\0\u58c3\0\272\0\272\0\272\0\u58e2"+
    "\0\272\0\272\0\272\0\272\0\u5901\0\u5920\0\u593f\0\272"+
    "\0\u595e\0\u597d\0\272\0\u599c\0\u59bb\0\u59da\0\u59f9\0\u5a18"+
    "\0\u5a37\0\272\0\272\0\272\0\272\0\272\0\u5a56\0\u5a75"+
    "\0\272\0\u5a94\0\u5ab3\0\u5ad2\0\u5af1\0\u5b10\0\272\0\u5b2f"+
    "\0\272\0\u5b4e\0\272\0\u5b6d\0\u5b8c\0\272\0\u5bab\0\272"+
    "\0\u5bca\0\u5be9\0\272";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[891];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\7\1\14\1\2\1\15\1\16\1\7"+
    "\1\17\1\20\1\21\1\22\1\23\1\7\1\24\1\7"+
    "\1\25\1\7\1\26\1\27\1\30\1\31\1\7\40\0"+
    "\1\7\1\32\10\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\14\7\1\33\3\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\34\5\7\1\35"+
    "\2\7\1\0\1\7\1\36\2\7\1\37\2\7\1\40"+
    "\2\7\2\0\1\7\1\0\6\7\1\41\5\7\1\42"+
    "\3\7\1\0\12\7\2\0\1\7\1\0\20\7\1\0"+
    "\2\7\1\43\1\44\1\45\1\7\1\46\1\47\2\7"+
    "\2\0\1\7\1\0\5\7\1\50\1\7\1\51\3\7"+
    "\1\52\4\7\1\0\2\7\1\53\1\7\1\54\2\7"+
    "\1\55\2\7\2\0\1\7\1\0\5\7\1\56\1\57"+
    "\5\7\1\60\3\7\1\0\12\7\2\0\1\7\1\0"+
    "\5\7\1\61\1\7\1\62\1\63\1\7\1\64\5\7"+
    "\1\0\1\7\1\65\5\7\1\66\2\7\2\0\1\7"+
    "\1\0\1\7\1\67\12\7\1\70\1\7\1\71\1\7"+
    "\5\0\1\72\2\0\2\72\2\0\3\72\3\0\2\72"+
    "\14\0\2\7\1\73\1\7\1\74\2\7\1\75\2\7"+
    "\2\0\1\7\1\0\14\7\1\76\3\7\17\0\1\77"+
    "\20\0\4\7\1\100\5\7\2\0\1\7\1\0\14\7"+
    "\1\101\3\7\1\0\1\7\1\102\5\7\1\103\2\7"+
    "\2\0\1\7\1\0\1\7\1\104\12\7\1\105\3\7"+
    "\1\0\2\7\1\106\1\7\1\107\5\7\2\0\1\7"+
    "\1\0\1\7\1\110\3\7\1\111\1\112\11\7\1\0"+
    "\2\7\1\113\7\7\2\0\1\7\1\0\5\7\1\114"+
    "\1\115\5\7\1\116\3\7\1\0\2\7\1\117\1\7"+
    "\1\120\2\7\1\121\2\7\2\0\1\7\1\0\20\7"+
    "\1\0\7\7\1\122\2\7\2\0\1\7\1\0\20\7"+
    "\1\0\2\7\1\123\1\7\1\124\2\7\1\125\2\7"+
    "\2\0\1\7\1\0\14\7\1\126\3\7\1\0\1\7"+
    "\1\127\10\7\2\0\1\7\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\1\7\1\130\3\7\1\131\12\7"+
    "\1\0\2\7\1\132\7\7\2\0\1\7\1\0\20\7"+
    "\1\0\4\7\1\133\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\2\7\1\134\1\7\1\135\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\3\7\1\136\6\7\2\0\1\7"+
    "\1\0\7\7\1\137\10\7\1\0\12\7\2\0\1\140"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\141\3\7\1\0\2\7\1\142\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\7\7\1\143\2\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7"+
    "\1\144\10\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\145\16\7\1\0\12\7\2\0\1\7\1\0\11\7"+
    "\1\146\6\7\1\0\4\7\1\147\5\7\2\0\1\7"+
    "\1\0\5\7\1\150\12\7\1\0\4\7\1\151\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\7\7\1\152\2\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\1\7\1\153\16\7\1\0\12\7\2\0\1\154"+
    "\1\0\5\7\1\155\1\7\1\156\10\7\1\0\7\7"+
    "\1\157\2\7\2\0\1\7\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\14\7\1\160\3\7\1\0\12\7"+
    "\2\0\1\7\1\0\16\7\1\161\1\7\1\0\12\7"+
    "\2\0\1\7\1\0\7\7\1\162\10\7\1\0\7\7"+
    "\1\163\2\7\2\0\1\7\1\0\1\7\1\164\16\7"+
    "\1\0\6\7\1\165\3\7\2\0\1\7\1\0\5\7"+
    "\1\166\12\7\1\0\12\7\2\0\1\7\1\0\6\7"+
    "\1\167\11\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\170\16\7\1\0\1\171\11\7\2\0\1\7\1\0"+
    "\20\7\1\0\2\7\1\172\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\3\7\1\173\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1\174"+
    "\11\7\1\0\12\7\2\0\1\7\1\0\6\7\1\175"+
    "\11\7\1\0\7\7\1\176\2\7\2\0\1\7\1\0"+
    "\14\7\1\177\3\7\1\0\12\7\2\0\1\200\1\0"+
    "\20\7\1\0\2\7\1\201\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\202"+
    "\16\7\1\0\7\7\1\203\2\7\2\0\1\7\1\0"+
    "\20\7\5\0\1\204\2\0\2\204\2\0\3\204\3\0"+
    "\2\204\14\0\12\7\2\0\1\7\1\0\11\7\1\205"+
    "\6\7\1\0\4\7\1\206\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\207"+
    "\16\7\1\0\12\7\2\0\1\210\1\0\20\7\5\0"+
    "\1\211\2\0\2\211\2\0\3\211\3\0\2\211\14\0"+
    "\12\7\2\0\1\212\1\0\20\7\1\0\5\7\1\213"+
    "\4\7\2\0\1\7\1\0\16\7\1\214\1\7\1\0"+
    "\12\7\2\0\1\7\1\0\14\7\1\215\3\7\1\0"+
    "\2\7\1\216\7\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\217\2\7\1\220\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\221"+
    "\12\7\1\0\5\7\1\222\4\7\2\0\1\7\1\0"+
    "\20\7\1\0\2\7\1\223\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1\224"+
    "\3\7\1\0\7\7\1\225\2\7\2\0\1\7\1\0"+
    "\6\7\1\226\11\7\1\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\227\16\7\1\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\230\16\7\1\0\12\7\2\0\1\7\1\0"+
    "\14\7\1\231\3\7\1\0\10\7\1\232\1\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\233\16\7\1\0\12\7\2\0\1\7\1\0"+
    "\2\7\1\234\4\7\1\235\1\7\1\236\6\7\1\0"+
    "\12\7\2\0\1\7\1\0\11\7\1\237\6\7\1\0"+
    "\1\240\11\7\2\0\1\7\1\0\15\7\1\241\2\7"+
    "\1\0\12\7\2\0\1\7\1\0\15\7\1\242\2\7"+
    "\1\0\5\7\1\243\4\7\2\0\1\244\1\0\7\7"+
    "\1\245\10\7\1\0\12\7\2\0\1\246\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\1\7\1\247\1\250"+
    "\15\7\1\0\10\7\1\251\1\7\2\0\1\7\1\0"+
    "\20\7\1\0\7\7\1\252\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\7\7\1\253\1\254\1\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\255\7\7\2\0\1\256"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\257\3\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\260\12\7\1\0\3\7\1\261\6\7\2\0\1\7"+
    "\1\0\20\7\1\0\7\7\1\262\2\7\2\0\1\7"+
    "\1\0\20\7\1\0\6\7\1\263\3\7\2\0\1\7"+
    "\1\0\20\7\1\0\4\7\1\264\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\265\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\266\16\7\1\0\5\7\1\267\4\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\270\12\7\1\0\12\7\2\0\1\7\1\0\10\7"+
    "\1\271\7\7\1\0\7\7\1\272\2\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7"+
    "\1\273\10\7\1\0\12\7\2\0\1\7\1\0\15\7"+
    "\1\274\2\7\1\0\4\7\1\275\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\5\7\1\276\4\7\2\0\1\7"+
    "\1\0\2\7\1\277\15\7\1\0\2\7\1\300\7\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\301"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\11\7"+
    "\1\302\6\7\1\0\12\7\2\0\1\303\1\0\20\7"+
    "\1\0\3\7\1\304\6\7\2\0\1\7\1\0\20\7"+
    "\1\0\1\305\11\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\3\7\1\306\14\7\1\0"+
    "\12\7\2\0\1\7\1\0\13\7\1\307\4\7\1\0"+
    "\10\7\1\310\1\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\6\7\1\311\11\7\1\0"+
    "\7\7\1\312\2\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\313\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\11\7\1\314\6\7\1\0"+
    "\6\7\1\315\3\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\316\1\0\20\7\1\0\10\7\1\317"+
    "\1\7\2\0\1\7\1\0\20\7\1\0\2\7\1\320"+
    "\7\7\2\0\1\7\1\0\20\7\1\0\7\7\1\321"+
    "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\1\7\1\322\16\7\1\0\12\7\2\0"+
    "\1\7\1\0\1\7\1\323\16\7\1\0\10\7\1\324"+
    "\1\7\2\0\1\7\1\0\20\7\1\0\4\7\1\325"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\11\7\1\326\6\7\1\0\7\7\1\327"+
    "\2\7\2\0\1\7\1\0\7\7\1\330\10\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\331\10\7\5\0"+
    "\1\332\2\0\2\332\2\0\3\332\3\0\2\332\14\0"+
    "\12\7\2\0\1\7\1\0\2\7\1\333\15\7\1\0"+
    "\6\7\1\334\3\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\13\7\1\335\4\7\1\0"+
    "\12\7\2\0\1\7\1\0\2\7\1\336\15\7\5\0"+
    "\1\337\2\0\2\337\2\0\3\337\3\0\2\337\14\0"+
    "\12\7\2\0\1\7\1\0\16\7\1\340\1\7\1\0"+
    "\7\7\1\341\2\7\2\0\1\7\1\0\20\7\1\0"+
    "\5\7\1\342\4\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\343\10\7\1\0"+
    "\4\7\1\344\5\7\2\0\1\7\1\0\16\7\1\345"+
    "\1\7\1\0\12\7\2\0\1\7\1\0\16\7\1\345"+
    "\1\7\1\0\12\7\2\0\1\346\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\10\7\1\347\7\7\1\0"+
    "\12\7\2\0\1\7\1\0\2\7\1\350\15\7\1\0"+
    "\1\351\11\7\2\0\1\7\1\0\20\7\1\0\10\7"+
    "\1\352\1\7\2\0\1\7\1\0\7\7\1\353\10\7"+
    "\1\0\4\7\1\354\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\5\7\1\355\12\7"+
    "\1\0\4\7\1\356\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\1\7\1\357\16\7"+
    "\1\0\1\7\1\360\10\7\2\0\1\7\1\0\20\7"+
    "\1\0\4\7\1\361\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\1\7\1\362\10\7\2\0\1\7\1\0\20\7"+
    "\1\0\4\7\1\363\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\4\7\1\364\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\14\7\1\365\3\7"+
    "\1\0\12\7\2\0\1\7\1\0\7\7\1\366\10\7"+
    "\1\0\4\7\1\367\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\7\7\1\370\2\7\2\0\1\7\1\0\16\7"+
    "\1\371\1\7\1\0\3\7\1\372\6\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7"+
    "\1\373\10\7\1\0\3\7\1\374\6\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\375\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\376\3\7\1\0\4\7\1\377\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\10\7\1\u0100\1\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\13\7"+
    "\1\u0101\4\7\1\0\12\7\2\0\1\7\1\0\7\7"+
    "\1\u0102\10\7\1\0\1\7\1\u0103\10\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\15\7"+
    "\1\u0104\2\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\u0105\12\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\u0106\12\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\u0107\12\7\1\0\4\7\1\u0108\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\3\7\1\u0109\6\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\u010a\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\16\7"+
    "\1\u010b\1\7\1\0\7\7\1\u010c\2\7\2\0\1\7"+
    "\1\0\2\7\1\u010d\15\7\1\0\12\7\2\0\1\7"+
    "\1\0\16\7\1\u010e\1\7\1\0\3\7\1\u010f\6\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\6\7\1\u0110\11\7\1\0\3\7\1\u0111\6\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\7\7\1\u0112\10\7\1\0\4\7\1\u0113\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\5\7\1\u0114\12\7\1\0\1\7\1\u0115\10\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\1\7\1\u0116\16\7\1\0\12\7\2\0\1\7"+
    "\1\0\7\7\1\u0117\10\7\1\0\12\7\2\0\1\7"+
    "\1\0\5\7\1\u0118\12\7\1\0\12\7\2\0\1\7"+
    "\1\0\14\7\1\u0119\3\7\1\0\12\7\2\0\1\7"+
    "\1\0\16\7\1\u011a\1\7\1\0\4\7\1\u011b\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\5\7\1\u011c\12\7\1\0\1\7\1\u011d\10\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\16\7\1\u011e\1\7\1\0\3\7\1\u011f\6\7"+
    "\2\0\1\7\1\0\2\7\1\u0120\12\7\1\u0121\2\7"+
    "\1\0\12\7\2\0\1\7\1\0\5\7\1\u0122\12\7"+
    "\1\0\4\7\1\u0123\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\4\7\1\u0124\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\10\7\1\u0125\7\7"+
    "\1\0\12\7\2\0\1\7\1\0\11\7\1\u0126\6\7"+
    "\1\0\4\7\1\u0127\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\3\7\1\u0128\6\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\14\7\1\u0129\3\7"+
    "\1\0\3\7\1\u012a\6\7\2\0\1\7\1\0\20\7"+
    "\1\0\5\7\1\u012b\4\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\5\7\1\u012c\12\7"+
    "\1\0\5\7\1\u012d\4\7\2\0\1\7\1\0\4\7"+
    "\1\u012e\13\7\5\0\1\u012f\2\0\2\u012f\2\0\3\u012f"+
    "\3\0\2\u012f\14\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\u0130\16\7\1\0\5\7\1\u0131\1\u0132\3\7\2\0"+
    "\1\7\1\0\20\7\1\0\3\7\1\u0133\1\7\1\u0134"+
    "\2\7\1\u0135\1\7\2\0\1\7\1\0\1\7\1\u0136"+
    "\1\u0137\1\u0138\5\7\1\u0139\1\7\1\u013a\1\u013b\1\u013c"+
    "\2\7\1\0\4\7\1\u013d\5\7\2\0\1\7\1\0"+
    "\20\7\5\0\1\u013e\2\0\2\u013e\2\0\3\u013e\3\0"+
    "\2\u013e\14\0\12\7\2\0\1\7\1\0\3\7\1\u013f"+
    "\14\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0140"+
    "\12\7\1\0\3\7\1\u0141\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\5\7\1\u0142\4\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0143"+
    "\10\7\1\0\4\7\1\u0144\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u0145"+
    "\11\7\1\0\4\7\1\u0146\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0147"+
    "\10\7\1\0\12\7\2\0\1\7\1\0\13\7\1\u0148"+
    "\4\7\1\0\10\7\1\u0149\1\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\15\7\1\u014a"+
    "\2\7\1\0\12\7\2\0\1\7\1\0\16\7\1\u014b"+
    "\1\7\1\0\12\7\2\0\1\7\1\0\3\7\1\u014c"+
    "\14\7\1\0\7\7\1\u014d\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\5\7\1\u014e\4\7\2\0\1\7\1\0"+
    "\20\7\1\0\5\7\1\u014f\4\7\2\0\1\7\1\0"+
    "\20\7\1\0\3\7\1\u0150\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0151"+
    "\10\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u0152"+
    "\15\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0153"+
    "\10\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u0154"+
    "\15\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0155"+
    "\10\7\1\0\12\7\2\0\1\7\1\0\17\7\1\u0156"+
    "\1\0\12\7\2\0\1\7\1\0\16\7\1\u0157\1\7"+
    "\1\0\2\7\1\u0158\7\7\2\0\1\7\1\0\20\7"+
    "\1\0\10\7\1\u0159\1\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\6\7\1\u015a\11\7"+
    "\1\0\12\7\2\0\1\7\1\0\14\7\1\u015b\3\7"+
    "\1\0\12\7\2\0\1\7\1\0\7\7\1\u015c\10\7"+
    "\1\0\7\7\1\u015d\2\7\2\0\1\7\1\0\20\7"+
    "\1\0\2\7\1\u015e\7\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\2\7\1\u015f\15\7"+
    "\1\0\2\7\1\u0160\7\7\2\0\1\7\1\0\20\7"+
    "\1\0\4\7\1\u0161\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\7\7\1\u0162\2\7\2\0\1\7\1\0\20\7"+
    "\1\0\4\7\1\u0163\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\14\7\1\u0164\3\7"+
    "\1\0\5\7\1\u0165\4\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\7\7\1\u0166\10\7"+
    "\1\0\12\7\2\0\1\u0167\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\7\7\1\u0168\10\7\1\0\12\7"+
    "\2\0\1\7\1\0\14\7\1\u0169\3\7\1\0\12\7"+
    "\2\0\1\7\1\0\5\7\1\u016a\12\7\1\0\12\7"+
    "\2\0\1\7\1\0\14\7\1\u016b\3\7\1\0\12\7"+
    "\2\0\1\7\1\0\14\7\1\u016c\3\7\1\0\7\7"+
    "\1\u016d\2\7\2\0\1\7\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\1\7\1\u016e\16\7\1\0\12\7"+
    "\2\0\1\7\1\0\3\7\1\u016f\14\7\1\0\4\7"+
    "\1\u0170\5\7\2\0\1\7\1\0\20\7\1\0\4\7"+
    "\1\u0171\5\7\2\0\1\7\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\2\7\1\u0172\15\7\1\0\4\7"+
    "\1\u0173\5\7\2\0\1\7\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\7\7\1\u0174\10\7\1\0\12\7"+
    "\2\0\1\7\1\0\3\7\1\u0175\14\7\1\0\12\7"+
    "\2\0\1\7\1\0\2\7\1\u0176\1\u0177\14\7\1\0"+
    "\12\7\2\0\1\7\1\0\6\7\1\u0178\11\7\1\0"+
    "\6\7\1\u0179\3\7\2\0\1\7\1\0\20\7\1\0"+
    "\7\7\1\u017a\2\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\6\7\1\u017b\11\7\1\0"+
    "\12\7\2\0\1\7\1\0\1\7\1\u017c\12\7\1\u017d"+
    "\3\7\1\0\2\7\1\u017e\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u017f\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u0180"+
    "\16\7\1\0\12\7\2\0\1\7\1\0\3\7\1\u0181"+
    "\14\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u0182"+
    "\11\7\1\0\7\7\1\u0183\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u0184"+
    "\16\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0185"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\3\7\1\u0186"+
    "\14\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u0187"+
    "\3\7\1\0\2\7\1\u0188\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0189"+
    "\12\7\5\0\1\u018a\2\0\2\u018a\2\0\3\u018a\3\0"+
    "\2\u018a\14\0\4\7\1\u018b\2\7\1\u018b\2\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\13\7\1\u018c\4\7\1\0\2\7\1\u018d\7\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\6\7\1\u018e\11\7\1\0\4\7\1\u018f\2\7\1\u0190"+
    "\2\7\2\0\1\7\1\0\5\7\1\u0191\12\7\1\0"+
    "\12\7\2\0\1\7\1\0\16\7\1\u0192\1\7\1\0"+
    "\4\7\1\u0193\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\1\7\1\u0194\12\7\1\u0195"+
    "\3\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0196"+
    "\12\7\1\0\7\7\1\u0197\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\1\7\1\u0198\10\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u0199"+
    "\3\7\1\u019a\12\7\1\0\2\7\1\u019b\7\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\u019c\16\7\5\0\1\u019d\2\0\2\u019d\2\0"+
    "\3\u019d\3\0\2\u019d\14\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\u019e\16\7\1\0\12\7\2\0\1\7\1\0"+
    "\3\7\1\u019f\14\7\1\0\1\u01a0\11\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\3\7"+
    "\1\u01a1\14\7\1\0\12\7\2\0\1\7\1\0\16\7"+
    "\1\u01a2\1\7\1\0\12\7\2\0\1\7\1\0\7\7"+
    "\1\u01a3\10\7\1\0\4\7\1\u01a4\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\1\7\1\u01a5\10\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\u01a6\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\1\u01a7\11\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u01a8"+
    "\16\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u01a9"+
    "\12\7\1\0\2\7\1\u01aa\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\3\7\1\u01ab\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\5\7\1\u01ac\1\u01ad\1\7\1\u01ae\1\7"+
    "\2\0\1\7\1\0\2\7\1\u01af\1\u01b0\12\7\1\u01b1"+
    "\1\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u01b2"+
    "\16\7\1\0\10\7\1\u01b3\1\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u01b4"+
    "\16\7\1\0\12\7\2\0\1\u01b5\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\14\7\1\u01b6\3\7\1\0"+
    "\12\7\2\0\1\7\1\0\1\7\1\u01b7\16\7\1\0"+
    "\12\7\2\0\1\7\1\0\2\7\1\u01b8\15\7\1\0"+
    "\12\7\2\0\1\7\1\0\1\7\1\u01b9\16\7\1\0"+
    "\12\7\2\0\1\7\1\0\11\7\1\u01ba\6\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\u01bb\10\7\1\0"+
    "\3\7\1\u01aa\6\7\2\0\1\7\1\0\20\7\1\0"+
    "\5\7\1\u01bc\4\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\u01bd\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\u01be\1\0\20\7\1\0\12\7\2\0"+
    "\1\u01bf\1\0\20\7\1\0\10\7\1\u01c0\1\7\2\0"+
    "\1\7\1\0\20\7\1\0\3\7\1\u01c1\6\7\2\0"+
    "\1\7\1\0\20\7\1\0\1\u01c2\11\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\11\7"+
    "\1\u01c3\6\7\1\0\12\7\2\0\1\7\1\0\13\7"+
    "\1\u01c4\4\7\1\0\4\7\1\u01c5\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\u01c6\16\7\1\0\4\7\1\u01c7\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\u01c8\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\u01c9\12\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\u01ca\12\7\1\0\4\7\1\u01cb\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\2\7"+
    "\1\u01cc\15\7\1\0\12\7\2\0\1\7\1\0\3\7"+
    "\1\u01cd\14\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\u01ce\16\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\u01cf\16\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\u01d0\12\7\1\0\4\7\1\u01d1\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\6\7"+
    "\1\u01d2\11\7\1\0\1\u01d3\11\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u01d4"+
    "\16\7\1\0\4\7\1\u01d5\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u01d6"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u01d7"+
    "\3\7\1\0\12\7\2\0\1\7\1\0\3\7\1\u01d8"+
    "\14\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u01d9"+
    "\12\7\1\0\4\7\1\u01da\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u01db"+
    "\16\7\1\0\4\7\1\u01dc\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\7\7\1\u01dd\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u01de"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u01df"+
    "\10\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u01e0"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u01e1"+
    "\3\7\5\0\1\u01e2\2\0\2\u01e2\2\0\3\u01e2\3\0"+
    "\2\u01e2\14\0\12\7\2\0\1\7\1\0\16\7\1\u01e3"+
    "\1\7\1\0\12\7\2\0\1\7\1\0\16\7\1\u01e4"+
    "\1\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u01e5"+
    "\10\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u01e6"+
    "\16\7\1\0\7\7\1\u01e7\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u01e8"+
    "\12\7\1\0\7\7\1\u01e9\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\7\7\1\u01ea\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\u01eb\1\0\20\7\1\0"+
    "\4\7\1\u01ec\2\7\1\u01ed\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u01ee"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u01ef"+
    "\11\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u01f0"+
    "\15\7\1\0\7\7\1\u01f1\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\7\7\1\u01f2\1\u01f3\1\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\u01f4\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\u01f5\3\7\1\0\12\7\2\0\1\7\1\0\3\7"+
    "\1\u01f6\14\7\5\0\1\u01f7\2\0\2\u01f7\2\0\3\u01f7"+
    "\3\0\2\u01f7\14\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\u01f8\3\7\1\0\12\7\2\0\1\7\1\0\5\7"+
    "\1\u01f9\12\7\1\0\1\7\1\u01fa\10\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\u01fb\3\7\1\0\4\7\1\u01fc\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\u01fd\16\7\1\0\4\7\1\u01fe\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\u01ff\3\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\u0200\3\7\1\0\2\7\1\u0201\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\1\u0202\11\7\2\0\1\7\1\0"+
    "\20\7\1\0\7\7\1\u0203\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u0204"+
    "\15\7\1\0\3\7\1\u0205\1\u0206\2\7\1\u0207\2\7"+
    "\2\0\1\7\1\0\5\7\1\u0208\5\7\1\u0209\4\7"+
    "\1\0\2\7\1\u020a\7\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\14\7\1\u020b\1\7"+
    "\1\u020c\1\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\u020d\12\7\1\u020e\3\7\1\0\12\7\2\0\1\7"+
    "\1\0\5\7\1\u020f\12\7\1\0\4\7\1\u0210\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\4\7\1\u0211\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\1\7\1\u0212\10\7"+
    "\2\0\1\7\1\0\20\7\1\0\4\7\1\u0213\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\4\7\1\u0214\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\1\u0215\11\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\14\7\1\u0216\3\7\1\0\1\7\1\u0217\10\7\2\0"+
    "\1\7\1\0\20\7\1\0\4\7\1\u0218\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\3\7\1\u0219\1\7\1\u021a"+
    "\1\u021b\1\u021c\2\7\2\0\1\7\1\0\3\7\1\u021d"+
    "\10\7\1\u021e\1\u021f\2\7\1\0\2\7\1\u0220\7\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\1\7\1\u0221\16\7\1\0\12\7\2\0\1\7"+
    "\1\0\1\7\1\u0222\16\7\1\0\4\7\1\u0223\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\2\7\1\u0224\15\7\1\0\12\7\2\0\1\7"+
    "\1\0\14\7\1\u0225\3\7\1\0\1\u0226\11\7\2\0"+
    "\1\7\1\0\20\7\1\0\4\7\1\u0227\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\5\7\1\u0228\4\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\6\7\1\u0229\11\7\1\0\12\7\2\0\1\7\1\0"+
    "\5\7\1\u022a\12\7\1\0\12\7\2\0\1\7\1\0"+
    "\7\7\1\u022b\10\7\1\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\u022c\16\7\1\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\u022d\16\7\1\0\12\7\2\0\1\7\1\0"+
    "\14\7\1\u022e\3\7\1\0\4\7\1\u022f\2\7\1\u022f"+
    "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\6\7\1\u0230\11\7\1\0\12\7\2\0"+
    "\1\7\1\0\4\7\1\u0231\13\7\1\0\1\7\1\u0232"+
    "\10\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\10\7\1\u0233\7\7\1\0\4\7\1\u0234"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\u0235\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\5\7\1\u0236\12\7\1\0\12\7\2\0\1\7\1\0"+
    "\5\7\1\u0237\12\7\1\0\12\7\2\0\1\7\1\0"+
    "\6\7\1\u0238\11\7\1\0\1\u0239\11\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\u023a\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\6\7"+
    "\1\u023b\11\7\1\0\3\7\1\u023c\6\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\6\7"+
    "\1\u023d\11\7\1\0\12\7\2\0\1\7\1\0\13\7"+
    "\1\u023e\4\7\1\0\1\u023f\11\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\3\7\1\u0240"+
    "\14\7\1\0\12\7\2\0\1\7\1\0\13\7\1\u0241"+
    "\4\7\1\0\12\7\2\0\1\7\1\0\10\7\1\u0242"+
    "\7\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u0243"+
    "\15\7\1\0\12\7\2\0\1\7\1\0\11\7\1\u0244"+
    "\6\7\1\0\3\7\1\u0245\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0246"+
    "\10\7\1\0\4\7\1\u0247\5\7\2\0\1\7\1\0"+
    "\16\7\1\u0248\1\7\1\0\12\7\2\0\1\7\1\0"+
    "\16\7\1\u0248\1\7\1\0\12\7\2\0\1\u0249\1\0"+
    "\20\7\1\0\4\7\1\u024a\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u024b\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\13\7\1\u024c"+
    "\4\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u024d"+
    "\10\7\1\0\1\7\1\u024e\10\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\15\7\1\u024f"+
    "\2\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0250"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0251"+
    "\12\7\5\0\1\u0252\2\0\2\u0252\2\0\3\u0252\3\0"+
    "\2\u0252\14\0\1\u0253\11\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\6\7\1\u0254\11\7"+
    "\1\0\2\7\1\u0255\7\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\1\7\1\u0256\16\7"+
    "\1\0\12\7\2\0\1\7\1\0\5\7\1\u0257\12\7"+
    "\1\0\12\7\2\0\1\7\1\0\14\7\1\u0258\3\7"+
    "\1\0\12\7\2\0\1\u0259\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\5\7\1\u025a\12\7\1\0\12\7"+
    "\2\0\1\7\1\0\14\7\1\u025b\3\7\1\0\10\7"+
    "\1\u025c\1\7\2\0\1\7\1\0\20\7\1\0\1\7"+
    "\1\u025d\10\7\2\0\1\7\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\1\7\1\u025e\16\7\1\0\4\7"+
    "\1\u025f\5\7\2\0\1\7\1\0\20\7\1\0\7\7"+
    "\1\u0260\2\7\2\0\1\7\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\5\7\1\u0261\12\7\1\0\7\7"+
    "\1\u0262\2\7\2\0\1\7\1\0\20\7\1\0\12\7"+
    "\2\0\1\7\1\0\16\7\1\u0263\1\7\1\0\12\7"+
    "\2\0\1\7\1\0\7\7\1\u0264\10\7\1\0\12\7"+
    "\2\0\1\7\1\0\1\7\1\u0265\16\7\1\0\7\7"+
    "\1\u0266\2\7\2\0\1\7\1\0\20\7\1\0\4\7"+
    "\1\u0267\2\7\1\u0268\2\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\5\7\1\u0269\12\7"+
    "\1\0\12\7\2\0\1\7\1\0\6\7\1\u026a\11\7"+
    "\1\0\12\7\2\0\1\7\1\0\5\7\1\u026b\12\7"+
    "\1\0\4\7\1\u026c\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\2\7\1\u026d\7\7\2\0\1\7\1\0\20\7"+
    "\1\0\4\7\1\u026e\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\1\7\1\u026f\16\7"+
    "\1\0\1\7\1\u0270\10\7\2\0\1\7\1\0\20\7"+
    "\1\0\5\7\1\u0271\4\7\2\0\1\7\1\0\20\7"+
    "\1\0\3\7\1\u0272\6\7\2\0\1\7\1\0\20\7"+
    "\1\0\7\7\1\u0273\2\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\6\7\1\u0274\11\7"+
    "\1\0\4\7\1\u0275\1\7\1\u0276\3\7\2\0\1\7"+
    "\1\0\5\7\1\u0277\12\7\1\0\12\7\2\0\1\7"+
    "\1\0\6\7\1\u0278\11\7\1\0\12\7\2\0\1\7"+
    "\1\0\10\7\1\u0279\7\7\1\0\12\7\2\0\1\7"+
    "\1\0\5\7\1\u027a\12\7\1\0\12\7\2\0\1\7"+
    "\1\0\1\7\1\u027b\16\7\1\0\2\7\1\u027c\7\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\7\7\1\u027d\10\7\1\0\4\7\1\u027e\5\7"+
    "\2\0\1\7\1\0\20\7\1\0\7\7\1\u027f\2\7"+
    "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7"+
    "\1\0\1\7\1\u0280\16\7\1\0\12\7\2\0\1\7"+
    "\1\0\13\7\1\u0281\4\7\1\0\12\7\2\0\1\u0282"+
    "\1\0\20\7\1\0\4\7\1\u0283\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\4\7\1\u0284\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\4\7\1\u0285\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\u0286\3\7\1\0\1\u0287\11\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\16\7\1\u0288"+
    "\1\7\1\0\4\7\1\u0289\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\4\7\1\u028a"+
    "\13\7\1\0\2\7\1\u028b\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u028c"+
    "\11\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u028d"+
    "\10\7\1\0\4\7\1\u028e\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u028f\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u0290"+
    "\11\7\1\0\4\7\1\u0291\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\1\7\1\u0292\10\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0293"+
    "\10\7\1\0\5\7\1\u0294\4\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u0295\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u0296\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u0297\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0298"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u0299"+
    "\11\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u029a"+
    "\16\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u029b"+
    "\3\7\1\0\4\7\1\u029c\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u029d"+
    "\10\7\1\0\4\7\1\u029e\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u029f"+
    "\10\7\1\0\2\7\1\u02a0\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u02a1"+
    "\15\7\1\0\2\7\1\u02a2\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u02a3\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u02a4\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u02a5"+
    "\11\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u02a6"+
    "\10\7\1\0\4\7\1\u02a7\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\3\7\1\u02a8\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u02a9"+
    "\3\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u02aa"+
    "\12\7\1\0\12\7\2\0\1\u02ab\1\0\20\7\1\0"+
    "\7\7\1\u02ac\2\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\u02ad\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\u02ae\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\13\7\1\u02af\4\7\1\0\2\7\1\u02b0"+
    "\7\7\2\0\1\7\1\0\20\7\1\0\4\7\1\u02b1"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\4\7\1\u02b2"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\2\7\1\u02b3\15\7\1\0\12\7\2\0"+
    "\1\7\1\0\11\7\1\u02b4\6\7\1\0\3\7\1\u02b5"+
    "\6\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\3\7\1\u02b6\14\7\1\0\12\7\2\0"+
    "\1\7\1\0\13\7\1\u02b7\4\7\1\0\7\7\1\u02b8"+
    "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\7\7\1\u02b9\10\7\1\0\4\7\1\u02ba"+
    "\5\7\2\0\1\7\1\0\16\7\1\u02bb\1\7\1\0"+
    "\12\7\2\0\1\7\1\0\16\7\1\u02bb\1\7\1\0"+
    "\12\7\2\0\1\u02bc\1\0\20\7\1\0\4\7\1\u02bd"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\5\7\1\u02be\12\7\1\0\12\7\2\0"+
    "\1\7\1\0\7\7\1\u02bf\10\7\1\0\12\7\2\0"+
    "\1\7\1\0\4\7\1\u02c0\13\7\1\0\12\7\2\0"+
    "\1\7\1\0\7\7\1\u02c1\10\7\1\0\12\7\2\0"+
    "\1\7\1\0\3\7\1\u02c2\14\7\1\0\2\7\1\u02c3"+
    "\7\7\2\0\1\7\1\0\20\7\1\0\4\7\1\u02c4"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\3\7\1\u02c5\14\7\1\0\12\7\2\0"+
    "\1\7\1\0\11\7\1\u02c6\6\7\1\0\12\7\2\0"+
    "\1\7\1\0\1\7\1\u02c7\16\7\1\0\7\7\1\u02c8"+
    "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\1\7\1\u02c9\16\7\1\0\7\7\1\u02ca"+
    "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\1\7\1\u02cb\16\7\1\0\12\7\2\0"+
    "\1\7\1\0\6\7\1\u02cc\11\7\1\0\12\7\2\0"+
    "\1\7\1\0\6\7\1\u02cd\11\7\1\0\10\7\1\u02ce"+
    "\1\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\14\7\1\u02cf\3\7\1\0\12\7\2\0"+
    "\1\u02d0\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\3\7\1\u02d1\14\7\1\0\4\7\1\u02d2\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\4\7\1\u02d3\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\4\7\1\u02d4\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\1\u02d5\11\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7"+
    "\1\u02d6\10\7\1\0\6\7\1\u02d7\3\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\u02d8\3\7\1\0\12\7\2\0\1\7\1\0\7\7"+
    "\1\u02d9\10\7\1\0\3\7\1\u02da\6\7\2\0\1\7"+
    "\1\0\20\7\1\0\4\7\1\u02db\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\2\7\1\u02dc\7\7\2\0\1\7"+
    "\1\0\20\7\1\0\4\7\1\u02dd\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\4\7\1\u02de\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\1\7"+
    "\1\u02df\16\7\1\0\12\7\2\0\1\7\1\0\6\7"+
    "\1\u02e0\11\7\1\0\12\7\2\0\1\7\1\0\14\7"+
    "\1\u02e1\3\7\1\0\4\7\1\u02e2\5\7\2\0\1\7"+
    "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7"+
    "\1\u02e3\10\7\1\0\12\7\2\0\1\7\1\0\2\7"+
    "\1\u02e4\1\u02e5\14\7\1\0\12\7\2\0\1\7\1\0"+
    "\7\7\1\u02e6\10\7\1\0\3\7\1\u02e7\6\7\2\0"+
    "\1\7\1\0\20\7\1\0\4\7\1\u02e8\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\u02e9\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u02ea"+
    "\15\7\1\0\3\7\1\u02eb\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u02ec\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u02ed\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u02ee"+
    "\3\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u02ef"+
    "\12\7\1\0\3\7\1\u02f0\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\3\7\1\u02f1\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u02f2\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u02f3"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u02f4"+
    "\16\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u02f5"+
    "\3\7\1\0\4\7\1\u02f6\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u02f7"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u02f8"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u02f9"+
    "\10\7\1\0\4\7\1\u02fa\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u02fb"+
    "\3\7\1\0\12\7\2\0\1\7\1\0\4\7\1\u02fc"+
    "\13\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u02fd"+
    "\12\7\1\0\3\7\1\u02fe\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u02ff"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\10\7\1\u0300"+
    "\7\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u0301"+
    "\15\7\1\0\2\7\1\u0302\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\3\7\1\u0303\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\6\7\1\u0304\3\7\2\0\1\7\1\0"+
    "\20\7\1\0\7\7\1\u0305\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u0306\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\1\7\1\u0307\10\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0308"+
    "\12\7\1\0\4\7\1\u0309\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u030a"+
    "\10\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u030b"+
    "\10\7\1\0\2\7\1\u030c\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u030d"+
    "\16\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u030e"+
    "\16\7\1\0\3\7\1\u030f\6\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\3\7\1\u0310"+
    "\14\7\1\0\4\7\1\u0311\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\2\7\1\u0312\7\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u0313\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u0314"+
    "\16\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u0315"+
    "\12\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u0316"+
    "\16\7\1\0\7\7\1\u0317\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u0318"+
    "\16\7\1\0\1\u0319\11\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\11\7\1\u031a\6\7"+
    "\1\0\4\7\1\u031b\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\7\7\1\u031c\10\7"+
    "\1\0\12\7\2\0\1\7\1\0\3\7\1\u031d\14\7"+
    "\1\0\4\7\1\u031e\5\7\2\0\1\7\1\0\20\7"+
    "\1\0\12\7\2\0\1\7\1\0\7\7\1\u031f\10\7"+
    "\1\0\12\7\2\0\1\7\1\0\2\7\1\u0320\15\7"+
    "\1\0\12\7\2\0\1\7\1\0\6\7\1\u0321\11\7"+
    "\1\0\12\7\2\0\1\7\1\0\7\7\1\u0322\10\7"+
    "\1\0\1\u0323\11\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\14\7\1\u0324\3\7\1\0"+
    "\12\7\2\0\1\7\1\0\6\7\1\u0325\11\7\1\0"+
    "\4\7\1\u0326\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\6\7\1\u0327\11\7\1\0"+
    "\12\7\2\0\1\7\1\0\6\7\1\u0328\11\7\1\0"+
    "\12\7\2\0\1\7\1\0\1\7\1\u0329\16\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\u032a\10\7\1\0"+
    "\4\7\1\u032b\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\5\7\1\u032c\12\7\1\0"+
    "\12\7\2\0\1\7\1\0\11\7\1\u032d\6\7\1\0"+
    "\2\7\1\u032e\7\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\u032f\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\u0330\10\7\1\0"+
    "\5\7\1\u0331\4\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\14\7\1\u0332\3\7\1\0"+
    "\4\7\1\u0333\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\u0334\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\5\7\1\u0335\12\7\1\0"+
    "\5\7\1\u0336\4\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\u0337\10\7\1\0"+
    "\4\7\1\u0338\2\7\1\u0338\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u0339"+
    "\11\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u033a"+
    "\3\7\1\0\4\7\1\u033b\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u033c"+
    "\3\7\1\0\12\7\2\0\1\7\1\0\5\7\1\u033d"+
    "\12\7\1\0\4\7\1\u033e\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u033f"+
    "\16\7\1\0\4\7\1\u0340\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\u0341"+
    "\16\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0342"+
    "\10\7\1\0\5\7\1\u0343\4\7\2\0\1\7\1\0"+
    "\20\7\1\0\4\7\1\u0344\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1\u0345"+
    "\3\7\1\0\4\7\1\u0346\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\2\7\1\u0347"+
    "\15\7\1\0\12\7\2\0\1\7\1\0\3\7\1\u0348"+
    "\14\7\1\0\4\7\1\u0349\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\7\7\1\u034a\2\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\u034b\1\0\20\7\1\0"+
    "\3\7\1\u034c\6\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\u034d\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\u034e\1\0\20\7\1\0\12\7\2\0"+
    "\1\u034f\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\6\7\1\u0350\11\7\1\0\4\7\1\u0351\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\16\7\1\u0352\1\7\1\0\4\7\1\u0353\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\u0354\1\0"+
    "\20\7\1\0\4\7\1\u0355\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0356"+
    "\10\7\1\0\12\7\2\0\1\7\1\0\6\7\1\u0357"+
    "\11\7\1\0\12\7\2\0\1\7\1\0\7\7\1\u0358"+
    "\10\7\1\0\4\7\1\u0359\2\7\1\u0359\2\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\14\7\1\u035a\3\7\1\0\1\7\1\u035b\10\7\2\0"+
    "\1\7\1\0\20\7\1\0\2\7\1\u035c\7\7\2\0"+
    "\1\7\1\0\20\7\1\0\4\7\1\u035d\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\2\7\1\u035e\15\7\1\0\12\7\2\0\1\7\1\0"+
    "\5\7\1\u035f\12\7\1\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\u0360\16\7\1\0\12\7\2\0\1\7\1\0"+
    "\1\7\1\u0361\16\7\1\0\4\7\1\u0362\5\7\2\0"+
    "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0"+
    "\7\7\1\u0363\10\7\1\0\12\7\2\0\1\u0364\1\0"+
    "\20\7\1\0\4\7\1\u0365\5\7\2\0\1\7\1\0"+
    "\20\7\1\0\12\7\2\0\1\7\1\0\16\7\1\u0366"+
    "\1\7\1\0\12\7\2\0\1\u0367\1\0\20\7\1\0"+
    "\5\7\1\u0368\4\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\u0369\10\7\1\0"+
    "\12\7\2\0\1\7\1\0\1\7\1\u036a\16\7\1\0"+
    "\12\7\2\0\1\7\1\0\6\7\1\u036b\11\7\1\0"+
    "\2\7\1\u036c\7\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\u036d\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\16\7\1\u036e\1\7\1\0"+
    "\4\7\1\u036f\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\u0370\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\4\7\1\u0371\5\7\2\0\1\7\1\0\20\7\1\0"+
    "\12\7\2\0\1\7\1\0\7\7\1\u0372\10\7\1\0"+
    "\12\7\2\0\1\u0373\1\0\20\7\1\0\4\7\1\u0374"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\4\7\1\u0375"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\4\7\1\u0376"+
    "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0"+
    "\1\7\1\0\5\7\1\u0377\12\7\1\0\12\7\2\0"+
    "\1\7\1\0\7\7\1\u0378\10\7\1\0\12\7\2\0"+
    "\1\7\1\0\5\7\1\u0379\12\7\1\0\12\7\2\0"+
    "\1\7\1\0\14\7\1\u037a\3\7\1\0\1\u037b\11\7"+
    "\2\0\1\7\1\0\20\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[23560];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\67\1\1\0\4\1\1\0\104\1\1\0"+
    "\4\1\1\0\120\1\1\0\4\1\1\0\117\1\1\0"+
    "\16\1\1\0\113\1\1\0\22\1\1\0\104\1\1\11"+
    "\24\1\1\0\132\1\1\11\u0129\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[891];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  FlexColorScanner(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  FlexColorScanner(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1246) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public ColorToken yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 55: 
          { return new ColorToken(yychar,yychar + yylength(), "0x00008B");
          }
        case 142: break;
        case 79: 
          { return new ColorToken(yychar,yychar + yylength(), "0xD3D3D3");
          }
        case 143: break;
        case 75: 
          { return new ColorToken(yychar,yychar + yylength(), "0xDEB887");
          }
        case 144: break;
        case 9: 
          { return new ColorToken(yychar,yychar + yylength(), "0x00FFFF");
          }
        case 145: break;
        case 109: 
          { return new ColorToken(yychar,yychar + yylength(), "0x228B22");
          }
        case 146: break;
        case 33: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFE4C4");
          }
        case 147: break;
        case 23: 
          { return new ColorToken(yychar,yychar + yylength(), "0x000000");
          }
        case 148: break;
        case 17: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFFFF0");
          }
        case 149: break;
        case 107: 
          { return new ColorToken(yychar,yychar + yylength(), "0xADFF2F");
          }
        case 150: break;
        case 76: 
          { return new ColorToken(yychar,yychar + yylength(), "0xB22222");
          }
        case 151: break;
        case 16: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF5DEB3");
          }
        case 152: break;
        case 67: 
          { return new ColorToken(yychar,yychar + yylength(), "0xD2691E");
          }
        case 153: break;
        case 46: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFF00FF");
          }
        case 154: break;
        case 70: 
          { return new ColorToken(yychar,yychar + yylength(), "0xBDB76B");
          }
        case 155: break;
        case 49: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFF5EE");
          }
        case 156: break;
        case 101: 
          { return new ColorToken(yychar,yychar + yylength(), "0x90EE90");
          }
        case 157: break;
        case 97: 
          { return new ColorToken(yychar,yychar + yylength(), "0x1E90FF");
          }
        case 158: break;
        case 92: 
          { return new ColorToken(yychar,yychar + yylength(), "0x7FFF00");
          }
        case 159: break;
        case 43: 
          { return new ColorToken(yychar,yychar + yylength(), "0x"+yytext().substring(1));
          }
        case 160: break;
        case 94: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFF8C00");
          }
        case 161: break;
        case 106: 
          { return new ColorToken(yychar,yychar + yylength(), "0x8B008B");
          }
        case 162: break;
        case 4: 
          { return new ColorToken(yychar,yychar + yylength(), "0x008080");
          }
        case 163: break;
        case 6: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFC0CB");
          }
        case 164: break;
        case 95: 
          { return new ColorToken(yychar,yychar + yylength(), "0x9932CC");
          }
        case 165: break;
        case 57: 
          { return new ColorToken(yychar,yychar + yylength(), "0xE6E6FA");
          }
        case 166: break;
        case 45: 
          { return new ColorToken(yychar,yychar + yylength(), "0x8B0000");
          }
        case 167: break;
        case 66: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF0F8FF");
          }
        case 168: break;
        case 68: 
          { return new ColorToken(yychar,yychar + yylength(), "0x5F9EA0");
          }
        case 169: break;
        case 124: 
          { return new ColorToken(yychar,yychar + yylength(), "0x00CED1");
          }
        case 170: break;
        case 136: 
          { return new ColorToken(yychar,yychar + yylength(), "0x48D1CC");
          }
        case 171: break;
        case 38: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFFF00");
          }
        case 172: break;
        case 82: 
          { return new ColorToken(yychar,yychar + yylength(), "0x7CFC00");
          }
        case 173: break;
        case 104: 
          { return new ColorToken(yychar,yychar + yylength(), "0x8B4513");
          }
        case 174: break;
        case 11: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFD700");
          }
        case 175: break;
        case 116: 
          { return new ColorToken(yychar,yychar + yylength(), "0x87CEFA");
          }
        case 176: break;
        case 111: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFFFE0");
          }
        case 177: break;
        case 37: 
          { return new ColorToken(yychar,yychar + yylength(), "0xEE82EE");
          }
        case 178: break;
        case 58: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFE4B5");
          }
        case 179: break;
        case 62: 
          { return new ColorToken(yychar,yychar + yylength(), "0x708090");
          }
        case 180: break;
        case 80: 
          { return new ColorToken(yychar,yychar + yylength(), "0xADD8E6");
          }
        case 181: break;
        case 126: 
          { return new ColorToken(yychar,yychar + yylength(), "0x483D8B");
          }
        case 182: break;
        case 18: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF0FFFF");
          }
        case 183: break;
        case 108: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFFAF0");
          }
        case 184: break;
        case 127: 
          { return new ColorToken(yychar,yychar + yylength(), "0xB8860B");
          }
        case 185: break;
        case 99: 
          { return new ColorToken(yychar,yychar + yylength(), "0x8A2BE2");
          }
        case 186: break;
        case 32: 
          { return new ColorToken(yychar,yychar + yylength(), "0x800080");
          }
        case 187: break;
        case 135: 
          { return new ColorToken(yychar,yychar + yylength(), "0x3CB371");
          }
        case 188: break;
        case 123: 
          { return new ColorToken(yychar,yychar + yylength(), "0xD87093");
          }
        case 189: break;
        case 21: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF5F5DC");
          }
        case 190: break;
        case 141: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFAFAD2");
          }
        case 191: break;
        case 117: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFFACD");
          }
        case 192: break;
        case 50: 
          { return new ColorToken(yychar,yychar + yylength(), "0x2E8B57");
          }
        case 193: break;
        case 71: 
          { return new ColorToken(yychar,yychar + yylength(), "0xBC8F8F");
          }
        case 194: break;
        case 128: 
          { return new ColorToken(yychar,yychar + yylength(), "0x20B2AA");
          }
        case 195: break;
        case 73: 
          { return new ColorToken(yychar,yychar + yylength(), "0xDCDCDC");
          }
        case 196: break;
        case 61: 
          { return new ColorToken(yychar,yychar + yylength(), "0x4682B4");
          }
        case 197: break;
        case 65: 
          { return new ColorToken(yychar,yychar + yylength(), "0x98FB98");
          }
        case 198: break;
        case 35: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFA500");
          }
        case 199: break;
        case 26: 
          { return new ColorToken(yychar,yychar + yylength(), "0x808000");
          }
        case 200: break;
        case 60: 
          { return new ColorToken(yychar,yychar + yylength(), "0x40E0D0");
          }
        case 201: break;
        case 122: 
          { return new ColorToken(yychar,yychar + yylength(), "0xEEE8AA");
          }
        case 202: break;
        case 113: 
          { return new ColorToken(yychar,yychar + yylength(), "0x9ACD32");
          }
        case 203: break;
        case 53: 
          { return new ColorToken(yychar,yychar + yylength(), "0x008B8B");
          }
        case 204: break;
        case 121: 
          { return new ColorToken(yychar,yychar + yylength(), "0xAFEEEE");
          }
        case 205: break;
        case 138: 
          { return new ColorToken(yychar,yychar + yylength(), "0xC71585");
          }
        case 206: break;
        case 130: 
          { return new ColorToken(yychar,yychar + yylength(), "0x6495ED");
          }
        case 207: break;
        case 41: 
          { return new ColorToken(yychar,yychar + yylength(), "0x87CEEB");
          }
        case 208: break;
        case 91: 
          { return new ColorToken(yychar,yychar + yylength(), "0x7FFFD4");
          }
        case 209: break;
        case 84: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF5FFFA");
          }
        case 210: break;
        case 12: 
          { return new ColorToken(yychar,yychar + yylength(), "0x0000FF");
          }
        case 211: break;
        case 36: 
          { return new ColorToken(yychar,yychar + yylength(), "0xDA70D6");
          }
        case 212: break;
        case 63: 
          { return new ColorToken(yychar,yychar + yylength(), "0x6A5ACD");
          }
        case 213: break;
        case 100: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF08080");
          }
        case 214: break;
        case 96: 
          { return new ColorToken(yychar,yychar + yylength(), "0x9400D3");
          }
        case 215: break;
        case 8: 
          { return new ColorToken(yychar,yychar + yylength(), "0xDDA0DD");
          }
        case 216: break;
        case 137: 
          { return new ColorToken(yychar,yychar + yylength(), "0x7B68EE");
          }
        case 217: break;
        case 14: 
          { return new ColorToken(yychar,yychar + yylength(), "0x000080");
          }
        case 218: break;
        case 52: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFF1493");
          }
        case 219: break;
        case 56: 
          { return new ColorToken(yychar,yychar + yylength(), yytext());
          }
        case 220: break;
        case 140: 
          { return new ColorToken(yychar,yychar + yylength(), "0x00FA9A");
          }
        case 221: break;
        case 28: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFF6347");
          }
        case 222: break;
        case 25: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF0E68C");
          }
        case 223: break;
        case 83: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFE4E1");
          }
        case 224: break;
        case 133: 
          { return new ColorToken(yychar,yychar + yylength(), "0xB0C4DE");
          }
        case 225: break;
        case 13: 
          { return new ColorToken(yychar,yychar + yylength(), "0x00FF00");
          }
        case 226: break;
        case 93: 
          { return new ColorToken(yychar,yychar + yylength(), "0xE9967A");
          }
        case 227: break;
        case 44: 
          { return new ColorToken(yychar,yychar + yylength(), "0x696969");
          }
        case 228: break;
        case 87: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF5F5F5");
          }
        case 229: break;
        case 24: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFAF0E6");
          }
        case 230: break;
        case 139: 
          { return new ColorToken(yychar,yychar + yylength(), "0x66CDAA");
          }
        case 231: break;
        case 118: 
          { return new ColorToken(yychar,yychar + yylength(), "0x191970");
          }
        case 232: break;
        case 81: 
          { return new ColorToken(yychar,yychar + yylength(), "0x32CD32");
          }
        case 233: break;
        case 112: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFDEAD");
          }
        case 234: break;
        case 54: 
          { return new ColorToken(yychar,yychar + yylength(), "0xA9A9A9");
          }
        case 235: break;
        case 15: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFFFFF");
          }
        case 236: break;
        case 64: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFDAB9");
          }
        case 237: break;
        case 132: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFEBCD");
          }
        case 238: break;
        case 20: 
          { return new ColorToken(yychar,yychar + yylength(), "0x008000");
          }
        case 239: break;
        case 69: 
          { return new ColorToken(yychar,yychar + yylength(), "0x006400");
          }
        case 240: break;
        case 39: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFF69B4");
          }
        case 241: break;
        case 31: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFA8072");
          }
        case 242: break;
        case 3: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFF0000");
          }
        case 243: break;
        case 42: 
          { return new ColorToken(yychar,yychar + yylength(), "0xDC143C");
          }
        case 244: break;
        case 29: 
          { return new ColorToken(yychar,yychar + yylength(), "0xA0522D");
          }
        case 245: break;
        case 48: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF0FFF0");
          }
        case 246: break;
        case 89: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFEFD5");
          }
        case 247: break;
        case 85: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFF4500");
          }
        case 248: break;
        case 120: 
          { return new ColorToken(yychar,yychar + yylength(), "0xBA55D3");
          }
        case 249: break;
        case 131: 
          { return new ColorToken(yychar,yychar + yylength(), "0x556B2F");
          }
        case 250: break;
        case 5: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFFAFA");
          }
        case 251: break;
        case 7: 
          { return new ColorToken(yychar,yychar + yylength(), "0xCD853F");
          }
        case 252: break;
        case 74: 
          { return new ColorToken(yychar,yychar + yylength(), "0xDAA520");
          }
        case 253: break;
        case 47: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFDF5E6");
          }
        case 254: break;
        case 129: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFF0F5");
          }
        case 255: break;
        case 51: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFF8DC");
          }
        case 256: break;
        case 110: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFA07A");
          }
        case 257: break;
        case 105: 
          { return new ColorToken(yychar,yychar + yylength(), "0x00BFFF");
          }
        case 258: break;
        case 88: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF4A460");
          }
        case 259: break;
        case 77: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFFB6C1");
          }
        case 260: break;
        case 114: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFAEBD7");
          }
        case 261: break;
        case 2: 
          { return new ColorToken(yychar,yychar + yylength(), "0xD2B48C");
          }
        case 262: break;
        case 72: 
          { return new ColorToken(yychar,yychar + yylength(), "0x4169E1");
          }
        case 263: break;
        case 125: 
          { return new ColorToken(yychar,yychar + yylength(), "0x2F4F4F");
          }
        case 264: break;
        case 22: 
          { return new ColorToken(yychar,yychar + yylength(), "0xA52A2A");
          }
        case 265: break;
        case 86: 
          { return new ColorToken(yychar,yychar + yylength(), "0x6B8E23");
          }
        case 266: break;
        case 34: 
          { return new ColorToken(yychar,yychar + yylength(), "0x800000");
          }
        case 267: break;
        case 103: 
          { return new ColorToken(yychar,yychar + yylength(), "0x00FF7F");
          }
        case 268: break;
        case 40: 
          { return new ColorToken(yychar,yychar + yylength(), "0xD8BFD8");
          }
        case 269: break;
        case 1: 
          { /* ignore */
          }
        case 270: break;
        case 98: 
          { return new ColorToken(yychar,yychar + yylength(), "0xF8F8FF");
          }
        case 271: break;
        case 78: 
          { return new ColorToken(yychar,yychar + yylength(), "0xE0FFFF");
          }
        case 272: break;
        case 27: 
          { return new ColorToken(yychar,yychar + yylength(), "0x4B0082");
          }
        case 273: break;
        case 19: 
          { return new ColorToken(yychar,yychar + yylength(), "0xFF7F50");
          }
        case 274: break;
        case 10: 
          { return new ColorToken(yychar,yychar + yylength(), "0x808080");
          }
        case 275: break;
        case 119: 
          { return new ColorToken(yychar,yychar + yylength(), "0x9370D8");
          }
        case 276: break;
        case 30: 
          { return new ColorToken(yychar,yychar + yylength(), "0xC0C0C0");
          }
        case 277: break;
        case 115: 
          { return new ColorToken(yychar,yychar + yylength(), "0x8FBC8F");
          }
        case 278: break;
        case 59: 
          { return new ColorToken(yychar,yychar + yylength(), "0xCD5C5C");
          }
        case 279: break;
        case 134: 
          { return new ColorToken(yychar,yychar + yylength(), "0x778899");
          }
        case 280: break;
        case 102: 
          { return new ColorToken(yychar,yychar + yylength(), "0x0000CD");
          }
        case 281: break;
        case 90: 
          { return new ColorToken(yychar,yychar + yylength(), "0xB0E0E6");
          }
        case 282: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
